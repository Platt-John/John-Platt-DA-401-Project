---
title: "Denison Wellness Analysts Correlation Analysis"
output: html_document
date: "2023-12-03"
  html_document:
    code_folding: hide
    theme: darkly
    toc: yes
    toc_float:
      collapsed: yes
      smooth_scroll: yes
    df_print: paged
  pdf_document:
    toc: yes
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(tidyverse)
setwd("C:/Users/John Platt/OneDrive/DA301Project/denison-wellness-analysts")

ncha_2023 <- read.csv("data/NCHA 2023 Clean.csv")

```

```{r message=FALSE, warning=FALSE, include=TRUE}
str(ncha_2023)
```

## PAGUIDE
```{r select columns for PAGUIDE regression}
# Use select() from dplyr to subset columns
ncha_2023_paguide<-ncha_2023 %>% dplyr::select(all_of(c('PAGUIDE',"Flourishing","Resilience",
                                          "PsychDistressScale",
                                          "LonelinessScale",
                                          "Selfharm",
                                          "SuicideRiskScale",
                                          "SafetyDayCampus",                           "SafetyNightCampus","USDAFI","BAC","GPA","ALCOHOLRISK", "COCAINERISK","TOBACCORISK","CANNABISRISK","RXSTIMULANTRISK")))
# Drop rows with NA if needed or impute missing values
ncha_2023_paguide <- na.omit(ncha_2023_paguide)
library(tidyr)
#ncha_2023_paguide<-ncha_2023_paguide %>% filter(GPA!="N/A")
# Check the changes
str(ncha_2023_paguide)
```
```{r convert ordinal variables to factors}
#SafetyNightCampus
ncha_2023_paguide$SafetyNightCampus <- factor(ncha_2023_paguide$SafetyNightCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#SafetyDayCampus
ncha_2023_paguide$SafetyDayCampus <- factor(ncha_2023_paguide$SafetyDayCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#Selfharm
ncha_2023_paguide$Selfharm <- factor(ncha_2023_paguide$Selfharm, ordered = TRUE, levels = c("Never","Once or twice","Monthly","Weekly","Daily or almost daily"))
#GPA
ncha_2023_paguide$GPA <- factor(ncha_2023_paguide$GPA, ordered = TRUE, levels = c("A+",'A','A-',"B+",'B','B-',"C+",'C','C-',"D+",'D','D-','F'))
```
```{r change dependent variable to be binary message=FALSE, warning=FALSE, include=TRUE}
# Change "Yes" to 1, "No" to 0, and null to NA
ncha_2023_paguide$PAGUIDE <- ifelse(ncha_2023_paguide$PAGUIDE == "Yes", 1,                       ifelse(ncha_2023_paguide$PAGUIDE == "No", 0, NA))
# Convert to factor with levels 0 and 1
ncha_2023_paguide$PAGUIDE <- as.factor(ncha_2023_paguide$PAGUIDE)
# Check the changes
str(ncha_2023_paguide)
```
```{r logistic regression}
# Fit logistic regression model 
model_paguide <- glm(PAGUIDE ~ ., data = ncha_2023_paguide, family = "binomial")
summary(model_paguide)
```
```{r calculate a psuedo r-squared}
ll.null<-model_paguide$null.deviance/-2
ll.proposed<-model_paguide$deviance/-2
(ll.null-ll.proposed)/ll.null
```
```{r check for multicollinearity}
install.packages('car')
library(car)
vif(model_paguide)
```
## ModPA7Days
```{r select columns for linear regression message=FALSE, warning=FALSE, include=TRUE}
# Use select() from dplyr to subset columns
ncha_2023_modPA<-ncha_2023 %>% dplyr::select(c('ModPA7Days',"Flourishing","Resilience",
                                          "PsychDistressScale",
                                          "LonelinessScale",
                                          "Selfharm",
                                          "SuicideRiskScale",
                                          "SafetyDayCampus",                           "SafetyNightCampus","USDAFI","BAC","GPA","ALCOHOLRISK", "COCAINERISK","TOBACCORISK","CANNABISRISK","RXSTIMULANTRISK"))
# Drop rows with NA if needed or impute missing values
ncha_2023_modPA <- na.omit(ncha_2023_modPA)
#str(ncha_2023_modPA)
```
```{r convert ordinal variables to factors}
#SafetyNightCampus
ncha_2023_modPA$SafetyNightCampus <- factor(ncha_2023_modPA$SafetyNightCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#SafetyDayCampus
ncha_2023_modPA$SafetyDayCampus <- factor(ncha_2023_modPA$SafetyDayCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#Selfharm
ncha_2023_modPA$Selfharm <- factor(ncha_2023_modPA$Selfharm, ordered = TRUE, levels = c("Never","Once or twice","Monthly","Weekly","Daily or almost daily"))
#GPA
ncha_2023_modPA$GPA <- factor(ncha_2023_modPA$GPA, ordered = TRUE, levels = c("A+",'A','A-',"B+",'B','B-',"C+",'C','C-',"D+",'D','D-','F'))
# Drop rows with NA if needed or impute missing values
ncha_2023_modPA <- na.omit(ncha_2023_modPA)
#Check changes
#str(ncha_2023_modPA)
```
```{r stepwise linear regression}
# Load the necessary libraries
library(MASS)
library(tidyverse)

# Perform stepwise linear regression
stepwise_model <- stepAIC(lm(ModPA7Days ~ ., data = ncha_2023_modPA))

# Print the summary of the selected model
summary(stepwise_model)
```
```{r linear regression}
model <- lm(ModPA7Days ~ ., data = ncha_2023_modPA)

summary(model)
```
```{r check for multicollinearity}
install.packages('car')
library(car)
vif(model)
```
```{r check homoscedasticity}
par(mfrow=c(2,2))
plot(model)
par(mfrow=c(1,1))
```
## VigPA7Days
```{r select columns for linear regression message=FALSE, warning=FALSE, include=TRUE}
# Use select() from dplyr to subset columns
ncha_2023_vigPA<-ncha_2023 %>% dplyr::select(c('VigPA7Days',"Flourishing","Resilience",
                                          "PsychDistressScale",
                                          "LonelinessScale",
                                          "Selfharm",
                                          "SuicideRiskScale",
                                          "SafetyDayCampus",                           "SafetyNightCampus","USDAFI","BAC","GPA","ALCOHOLRISK", "COCAINERISK","TOBACCORISK","CANNABISRISK","RXSTIMULANTRISK"))
# Drop rows with NA if needed or impute missing values
ncha_2023_vigPA <- na.omit(ncha_2023_vigPA)
#str(ncha_2023_modPA)
```
```{r convert ordinal variables to factors}
#SafetyNightCampus
ncha_2023_vigPA$SafetyNightCampus <- factor(ncha_2023_vigPA$SafetyNightCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#SafetyDayCampus
ncha_2023_vigPA$SafetyDayCampus <- factor(ncha_2023_vigPA$SafetyDayCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#Selfharm
ncha_2023_vigPA$Selfharm <- factor(ncha_2023_vigPA$Selfharm, ordered = TRUE, levels = c("Never","Once or twice","Monthly","Weekly","Daily or almost daily"))
#GPA
ncha_2023_vigPA$GPA <- factor(ncha_2023_vigPA$GPA, ordered = TRUE, levels = c("A+",'A','A-',"B+",'B','B-',"C+",'C','C-',"D+",'D','D-','F'))
# Drop rows with NA if needed or impute missing values
ncha_2023_vigPA <- na.omit(ncha_2023_vigPA)
#Check changes
#str(ncha_2023_modPA)
```
```{r stepwise linear regression}
# Load the necessary libraries
library(MASS)
library(tidyverse)

# Perform stepwise linear regression
stepwise_model <- stepAIC(lm(VigPA7Days ~ ., data = ncha_2023_vigPA))

# Print the summary of the selected model
summary(stepwise_model)
```
```{r linear regression}
model <- lm(VigPA7Days ~ ., data = ncha_2023_vigPA)

summary(model)
```
```{r check for multicollinearity}
install.packages('car')
library(car)
vif(model)
```
```{r check homoscedasticity}
par(mfrow=c(2,2))
plot(model)
par(mfrow=c(1,1))
```
## DaysMuscleS7days
```{r select columns for linear regression message=FALSE, warning=FALSE, include=TRUE}
# Use select() from dplyr to subset columns
ncha_2023_muscle<-ncha_2023 %>% dplyr::select(c('DaysMuscleS7days',"Flourishing","Resilience",
                                          "PsychDistressScale",
                                          "LonelinessScale",
                                          "Selfharm",
                                          "SuicideRiskScale",
                                          "SafetyDayCampus",                           "SafetyNightCampus","USDAFI","BAC","GPA","ALCOHOLRISK", "COCAINERISK","TOBACCORISK","CANNABISRISK","RXSTIMULANTRISK"))
# Drop rows with NA if needed or impute missing values
ncha_2023_muscle <- na.omit(ncha_2023_muscle)
#str(ncha_2023_modPA)
```
```{r convert ordinal variables to factors}
#SafetyNightCampus
ncha_2023_muscle$SafetyNightCampus <- factor(ncha_2023_muscle$SafetyNightCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#SafetyDayCampus
ncha_2023_muscle$SafetyDayCampus <- factor(ncha_2023_muscle$SafetyDayCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#Selfharm
ncha_2023_muscle$Selfharm <- factor(ncha_2023_muscle$Selfharm, ordered = TRUE, levels = c("Never","Once or twice","Monthly","Weekly","Daily or almost daily"))
#GPA
ncha_2023_muscle$GPA <- factor(ncha_2023_muscle$GPA, ordered = TRUE, levels = c("A+",'A','A-',"B+",'B','B-',"C+",'C','C-',"D+",'D','D-','F'))
# Drop rows with NA if needed or impute missing values
ncha_2023_muscle <- na.omit(ncha_2023_muscle)
#Check changes
#str(ncha_2023_modPA)
```
```{r stepwise linear regression}
# Load the necessary libraries
library(MASS)
library(tidyverse)

# Perform stepwise linear regression
stepwise_model <- stepAIC(lm(DaysMuscleS7days ~ ., data = ncha_2023_muscle))

# Print the summary of the selected model
summary(stepwise_model)
```
```{r linear regression}
model <- lm(DaysMuscleS7days ~ ., data = ncha_2023_muscle)

summary(model)
```
```{r check for multicollinearity}
install.packages('car')
library(car)
vif(model)
```
```{r check homoscedasticity}
par(mfrow=c(2,2))
plot(model)
par(mfrow=c(1,1))
```
## AvgFruitServPerDay7Days
```{r select columns for PAGUIDE regression}
# Use select() from dplyr to subset columns
ncha_2023_fs<-ncha_2023 %>% dplyr::select(all_of(c('AvgFruitServPerDay7Days',"Flourishing","Resilience",
                                          "PsychDistressScale",
                                          "LonelinessScale",
                                          "Selfharm",
                                          "SuicideRiskScale",
                                          "SafetyDayCampus",                           "SafetyNightCampus","USDAFI","BAC","GPA","ALCOHOLRISK", "COCAINERISK","TOBACCORISK","CANNABISRISK","RXSTIMULANTRISK")))
# Drop rows with NA if needed or impute missing values
ncha_2023_fs <- na.omit(ncha_2023_fs)
library(tidyr)
#ncha_2023_paguide<-ncha_2023_paguide %>% filter(GPA!="N/A")
# Check the changes
#str(ncha_2023_fs)
```
```{r convert ordinal variables to factors}
#SafetyNightCampus
ncha_2023_fs$SafetyNightCampus <- factor(ncha_2023_fs$SafetyNightCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#SafetyDayCampus
ncha_2023_fs$SafetyDayCampus <- factor(ncha_2023_fs$SafetyDayCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#Selfharm
ncha_2023_fs$Selfharm <- factor(ncha_2023_fs$Selfharm, ordered = TRUE, levels = c("Never","Once or twice","Monthly","Weekly","Daily or almost daily"))
#GPA
ncha_2023_fs$GPA <- factor(ncha_2023_fs$GPA, ordered = TRUE, levels = c("A+",'A','A-',"B+",'B','B-',"C+",'C','C-',"D+",'D','D-','F'))
```
```{r change dependent variable to be binary message=FALSE, warning=FALSE, include=TRUE}
# Change at fruit serving values less than 1-2 to 0 and values at or greater than that range to 1
ncha_2023_fs$AvgFruitServPerDay7Days <- ifelse(ncha_2023_fs$AvgFruitServPerDay7Days == "0", 0,                       ifelse(ncha_2023_fs$AvgFruitServPerDay7Days == "1-2", 1,
        ifelse(ncha_2023_fs$AvgFruitServPerDay7Days == "3-4",1,
        ifelse(ncha_2023_fs$AvgFruitServPerDay7Days == "5-6",1,
      ifelse(ncha_2023_fs$AvgFruitServPerDay7Days == ">6",1,NA)))))
# Convert to factor with levels 0 and 1
ncha_2023_fs$AvgFruitServPerDay7Days <- as.factor(ncha_2023_fs$AvgFruitServPerDay7Days)
# Check the changes
str(ncha_2023_fs)
```
```{r logistic regression}
# Fit logistic regression model 
model <- glm(AvgFruitServPerDay7Days ~ ., data = ncha_2023_fs, family = "binomial")
summary(model)
```
```{r calculate a psuedo r-squared}
ll.null<-model$null.deviance/-2
ll.proposed<-model$deviance/-2
(ll.null-ll.proposed)/ll.null
```
```{r check for multicollinearity}
install.packages('car')
library(car)
vif(model)
```
## AvgVegServPerDay7Days
```{r select columns for logistic regression}
# Use select() from dplyr to subset columns
ncha_2023_vs<-ncha_2023 %>% dplyr::select(all_of(c('AvgVegServPerDay7Days',"Flourishing","Resilience",
                                          "PsychDistressScale",
                                          "LonelinessScale",
                                          "Selfharm",
                                          "SuicideRiskScale",
                                          "SafetyDayCampus",                           "SafetyNightCampus","USDAFI","BAC","GPA","ALCOHOLRISK", "COCAINERISK","TOBACCORISK","CANNABISRISK","RXSTIMULANTRISK")))
# Drop rows with NA if needed or impute missing values
ncha_2023_vs <- na.omit(ncha_2023_vs)
library(tidyr)
#ncha_2023_paguide<-ncha_2023_paguide %>% filter(GPA!="N/A")
# Check the changes
#str(ncha_2023_fs)
```
```{r convert ordinal variables to factors}
#SafetyNightCampus
ncha_2023_vs$SafetyNightCampus <- factor(ncha_2023_vs$SafetyNightCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#SafetyDayCampus
ncha_2023_vs$SafetyDayCampus <- factor(ncha_2023_vs$SafetyDayCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#Selfharm
ncha_2023_vs$Selfharm <- factor(ncha_2023_vs$Selfharm, ordered = TRUE, levels = c("Never","Once or twice","Monthly","Weekly","Daily or almost daily"))
#GPA
ncha_2023_vs$GPA <- factor(ncha_2023_vs$GPA, ordered = TRUE, levels = c("A+",'A','A-',"B+",'B','B-',"C+",'C','C-',"D+",'D','D-','F'))
```
```{r change dependent variable to be binary message=FALSE, warning=FALSE, include=TRUE}
# Change at fruit serving values less than 1-2 to 0 and values at or greater than that range to 1
ncha_2023_vs$AvgVegServPerDay7Days <- ifelse(ncha_2023_vs$AvgVegServPerDay7Days == "0", 0,                       ifelse(ncha_2023_vs$AvgVegServPerDay7Days == "1-2", 1,
        ifelse(ncha_2023_vs$AvgVegServPerDay7Days == "3-4",1,
        ifelse(ncha_2023_vs$AvgVegServPerDay7Days == "5-6",1,
      ifelse(ncha_2023_vs$AvgVegServPerDay7Days == ">6",1,NA)))))
# Convert to factor with levels 0 and 1
ncha_2023_vs$AvgVegServPerDay7Days <- as.factor(ncha_2023_vs$AvgVegServPerDay7Days)
# Check the changes
str(ncha_2023_vs)
```
```{r logistic regression}
# Fit logistic regression model 
model <- glm(AvgVegServPerDay7Days ~ ., data = ncha_2023_vs, family = "binomial")
summary(model)
```
```{r calculate a psuedo r-squared}
ll.null<-model$null.deviance/-2
ll.proposed<-model$deviance/-2
(ll.null-ll.proposed)/ll.null
```
```{r check for multicollinearity}
install.packages('car')
library(car)
vif(model)
```
## AvgSleepWeeknight2Weeks
```{r select columns for linear regression message=FALSE, warning=FALSE, include=TRUE}
# Use select() from dplyr to subset columns
ncha_2023_sleepwn<-ncha_2023 %>% dplyr::select(c('AvgSleepWeeknight2Weeks',"Flourishing","Resilience",
                                          "PsychDistressScale",
                                          "LonelinessScale",
                                          "Selfharm",
                                          "SuicideRiskScale",
                                          "SafetyDayCampus",                           "SafetyNightCampus","USDAFI","BAC","GPA","ALCOHOLRISK", "COCAINERISK","TOBACCORISK","CANNABISRISK","RXSTIMULANTRISK"))
# Drop rows with NA if needed or impute missing values
ncha_2023_sleepwn <- na.omit(ncha_2023_sleepwn)
#str(ncha_2023_modPA)
```
```{r convert ordinal variables to factors}
#SafetyNightCampus
ncha_2023_sleepwn$SafetyNightCampus <- factor(ncha_2023_sleepwn$SafetyNightCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#SafetyDayCampus
ncha_2023_sleepwn$SafetyDayCampus <- factor(ncha_2023_sleepwn$SafetyDayCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#Selfharm
ncha_2023_sleepwn$Selfharm <- factor(ncha_2023_sleepwn$Selfharm, ordered = TRUE, levels = c("Never","Once or twice","Monthly","Weekly","Daily or almost daily"))
#GPA
ncha_2023_sleepwn$GPA <- factor(ncha_2023_sleepwn$GPA, ordered = TRUE, levels = c("A+",'A','A-',"B+",'B','B-',"C+",'C','C-',"D+",'D','D-','F'))
# Drop rows with NA if needed or impute missing values
ncha_2023_sleepwn <- na.omit(ncha_2023_sleepwn)
#Check changes
#str(ncha_2023_modPA)
```
```{r stepwise linear regression}
# Load the necessary libraries
library(MASS)
library(tidyverse)

# Perform stepwise linear regression
stepwise_model <- stepAIC(lm(AvgSleepWeeknight2Weeks ~ ., data = ncha_2023_sleepwn))

# Print the summary of the selected model
summary(stepwise_model)
```
```{r linear regression}
model <- lm(AvgSleepWeeknight2Weeks ~ ., data = ncha_2023_sleepwn)

summary(model)
```
```{r check for multicollinearity}
install.packages('car')
library(car)
vif(model)
```
```{r check homoscedasticity}
par(mfrow=c(2,2))
plot(model)
par(mfrow=c(1,1))
```

## AvgSleepWeekendNight2Weeks
```{r select columns for linear regression message=FALSE, warning=FALSE, include=TRUE}
# Use select() from dplyr to subset columns
ncha_2023_sleepwdn<-ncha_2023 %>% dplyr::select(c('AvgSleepWeekendNight2Weeks',"Flourishing","Resilience",
                                          "PsychDistressScale",
                                          "LonelinessScale",
                                          "Selfharm",
                                          "SuicideRiskScale",
                                          "SafetyDayCampus",                           "SafetyNightCampus","USDAFI","BAC","GPA","ALCOHOLRISK", "COCAINERISK","TOBACCORISK","CANNABISRISK","RXSTIMULANTRISK"))
# Drop rows with NA if needed or impute missing values
ncha_2023_sleepwdn <- na.omit(ncha_2023_sleepwdn)
#str(ncha_2023_modPA)
```
```{r convert ordinal variables to factors}
#SafetyNightCampus
ncha_2023_sleepwdn$SafetyNightCampus <- factor(ncha_2023_sleepwdn$SafetyNightCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#SafetyDayCampus
ncha_2023_sleepwdn$SafetyDayCampus <- factor(ncha_2023_sleepwdn$SafetyDayCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#Selfharm
ncha_2023_sleepwdn$Selfharm <- factor(ncha_2023_sleepwdn$Selfharm, ordered = TRUE, levels = c("Never","Once or twice","Monthly","Weekly","Daily or almost daily"))
#GPA
ncha_2023_sleepwdn$GPA <- factor(ncha_2023_sleepwdn$GPA, ordered = TRUE, levels = c("A+",'A','A-',"B+",'B','B-',"C+",'C','C-',"D+",'D','D-','F'))
# Drop rows with NA if needed or impute missing values
ncha_2023_sleepwdn <- na.omit(ncha_2023_sleepwdn)
#Check changes
#str(ncha_2023_modPA)
```
```{r stepwise linear regression}
# Load the necessary libraries
library(MASS)
library(tidyverse)

# Perform stepwise linear regression
stepwise_model <- stepAIC(lm(AvgSleepWeekendNight2Weeks ~ ., data = ncha_2023_sleepwdn))

# Print the summary of the selected model
summary(stepwise_model)
```
```{r linear regression}
model <- lm(AvgSleepWeekendNight2Weeks ~ ., data = ncha_2023_sleepwdn)

summary(model)
```
```{r check for multicollinearity}
install.packages('car')
library(car)
vif(model)
```
```{r check homoscedasticity}
par(mfrow=c(2,2))
plot(model)
par(mfrow=c(1,1))
```
## UsedCondomOral30Days
```{r select columns for PAGUIDE regression}
# Use select() from dplyr to subset columns
ncha_2023_uco<-ncha_2023 %>% dplyr::select(all_of(c('UsedCondomOral30Days',"Flourishing","Resilience","PsychDistressScale","LonelinessScale",
                                          "Selfharm",
                                          "SuicideRiskScale",
                                          "SafetyDayCampus",                           "SafetyNightCampus","USDAFI","BAC","GPA","ALCOHOLRISK", "COCAINERISK","TOBACCORISK","CANNABISRISK","RXSTIMULANTRISK")))
# Drop rows with NA if needed or impute missing values
ncha_2023_uco <- na.omit(ncha_2023_uco)
library(tidyr)
#ncha_2023_paguide<-ncha_2023_paguide %>% filter(GPA!="N/A")
# Check the changes
#str(ncha_2023_fs)
```
```{r convert ordinal variables to factors}
#SafetyNightCampus
ncha_2023_uco$SafetyNightCampus <- factor(ncha_2023_uco$SafetyNightCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#SafetyDayCampus
ncha_2023_uco$SafetyDayCampus <- factor(ncha_2023_uco$SafetyDayCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#Selfharm
ncha_2023_uco$Selfharm <- factor(ncha_2023_uco$Selfharm, ordered = TRUE, levels = c("Never","Once or twice","Monthly","Weekly","Daily or almost daily"))
#GPA
ncha_2023_uco$GPA <- factor(ncha_2023_uco$GPA, ordered = TRUE, levels = c("A+",'A','A-',"B+",'B','B-',"C+",'C','C-',"D+",'D','D-','F'))
```
```{r change dependent variable to be binary message=FALSE, warning=FALSE, include=TRUE}
# Make variable binary
ncha_2023_uco$UsedCondomOral30Days <- ifelse(ncha_2023_uco$UsedCondomOral30Days == "Never", 0,                       ifelse(ncha_2023_uco$UsedCondomOral30Days == "Rarely", 0,
        ifelse(ncha_2023_uco$UsedCondomOral30Days == "Sometimes",0,
        ifelse(ncha_2023_uco$UsedCondomOral30Days == "Most of the time",1,
      ifelse(ncha_2023_uco$UsedCondomOral30Days == "Always",1,NA)))))
# Convert to factor with levels 0 and 1
ncha_2023_uco$UsedCondomOral30Days <- as.factor(ncha_2023_uco$UsedCondomOral30Days)
# Check the changes
str(ncha_2023_uco)
```
```{r logistic regression}
# Fit logistic regression model 
model <- glm(UsedCondomOral30Days ~ ., data = ncha_2023_uco, family = "binomial")
summary(model)
```
```{r calculate a psuedo r-squared}
ll.null<-model$null.deviance/-2
ll.proposed<-model$deviance/-2
(ll.null-ll.proposed)/ll.null
```
```{r check for multicollinearity}
install.packages('car')
library(car)
vif(model)
```
## UsedCondomVagina30Days
```{r select columns for logistic regression}
# Use select() from dplyr to subset columns
ncha_2023_ucv<-ncha_2023 %>% dplyr::select(all_of(c('UsedCondomVagina30Days',"Flourishing","Resilience","PsychDistressScale","LonelinessScale",
                                          "Selfharm",
                                          "SuicideRiskScale",
                                          "SafetyDayCampus",                           "SafetyNightCampus","USDAFI","BAC","GPA","ALCOHOLRISK", "COCAINERISK","TOBACCORISK","CANNABISRISK","RXSTIMULANTRISK")))
# Drop rows with NA if needed or impute missing values
ncha_2023_ucv <- na.omit(ncha_2023_ucv)
library(tidyr)
ncha_2023_paguide<-ncha_2023_paguide %>% filter(GPA!="N/A")
# Check the changes
#str(ncha_2023_fs)
```
```{r convert ordinal variables to factors}
#SafetyNightCampus
ncha_2023_ucv$SafetyNightCampus <- factor(ncha_2023_ucv$SafetyNightCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#SafetyDayCampus
ncha_2023_ucv$SafetyDayCampus <- factor(ncha_2023_ucv$SafetyDayCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#Selfharm
ncha_2023_ucv$Selfharm <- factor(ncha_2023_ucv$Selfharm, ordered = TRUE, levels = c("Never","Once or twice","Monthly","Weekly","Daily or almost daily"))
#GPA
ncha_2023_ucv$GPA <- factor(ncha_2023_ucv$GPA, ordered = TRUE, levels = c("A+",'A','A-',"B+",'B','B-',"C+",'C','C-',"D+",'D','D-','F'))
```
```{r change dependent variable to be binary message=FALSE, warning=FALSE, include=TRUE}
# Make variable binary
ncha_2023_ucv$UsedCondomVagina30Days <- ifelse(ncha_2023_ucv$UsedCondomVagina30Days == "Never", 0,                       ifelse(ncha_2023_ucv$UsedCondomVagina30Days == "Rarely", 0,
        ifelse(ncha_2023_ucv$UsedCondomVagina30Days == "Sometimes",0,
        ifelse(ncha_2023_ucv$UsedCondomVagina30Days == "Most of the time",1,
      ifelse(ncha_2023_ucv$UsedCondomVagina30Days == "Always",1,NA)))))
# Convert to factor with levels 0 and 1
ncha_2023_ucv$UsedCondomVagina30Days <- as.factor(ncha_2023_ucv$UsedCondomVagina30Days)
# Check the changes
str(ncha_2023_ucv)
```
```{r logistic regression}
# Fit logistic regression model 
model <- glm(UsedCondomVagina30Days ~ ., data = ncha_2023_ucv, family = "binomial")
summary(model)
```
```{r calculate a psuedo r-squared}
ll.null<-model$null.deviance/-2
ll.proposed<-model$deviance/-2
(ll.null-ll.proposed)/ll.null
```
```{r check for multicollinearity}
install.packages('car')
library(car)
vif(model)
```
## UsedCondomAnal30Days
```{r select columns for PAGUIDE regression}
# Use select() from dplyr to subset columns
ncha_2023_uca<-ncha_2023 %>% dplyr::select(all_of(c('UsedCondomAnal30Days',"Flourishing","Resilience","PsychDistressScale","LonelinessScale",
                                          "Selfharm",
                                          "SuicideRiskScale",
                                          "SafetyDayCampus",                           "SafetyNightCampus","USDAFI","BAC","GPA","ALCOHOLRISK", "COCAINERISK","TOBACCORISK","CANNABISRISK","RXSTIMULANTRISK")))
# Drop rows with NA if needed or impute missing values
ncha_2023_uca <- na.omit(ncha_2023_uca)
library(tidyr)
#ncha_2023_paguide<-ncha_2023_paguide %>% filter(GPA!="N/A")
# Check the changes
#str(ncha_2023_fs)
```
```{r convert ordinal variables to factors}
#SafetyNightCampus
ncha_2023_uca$SafetyNightCampus <- factor(ncha_2023_uca$SafetyNightCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#SafetyDayCampus
ncha_2023_uca$SafetyDayCampus <- factor(ncha_2023_uca$SafetyDayCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#Selfharm
ncha_2023_uca$Selfharm <- factor(ncha_2023_uca$Selfharm, ordered = TRUE, levels = c("Never","Once or twice","Monthly","Weekly","Daily or almost daily"))
#GPA
ncha_2023_uca$GPA <- factor(ncha_2023_uca$GPA, ordered = TRUE, levels = c("A+",'A','A-',"B+",'B','B-',"C+",'C','C-',"D+",'D','D-','F'))
```
```{r change dependent variable to be binary message=FALSE, warning=FALSE, include=TRUE}
# Make variable binary
ncha_2023_uca$UsedCondomAnal30Days <- ifelse(ncha_2023_uca$UsedCondomAnal30Days == "Never", 0,                       ifelse(ncha_2023_uca$UsedCondomAnal30Days == "Rarely", 0,
        ifelse(ncha_2023_uca$UsedCondomAnal30Days == "Sometimes",0,
        ifelse(ncha_2023_uca$UsedCondomAnal30Days == "Most of the time",1,
      ifelse(ncha_2023_uca$UsedCondomAnal30Days == "Always",1,NA)))))
# Convert to factor with levels 0 and 1
ncha_2023_uca$UsedCondomAnal30Days <- as.factor(ncha_2023_uca$UsedCondomAnal30Days)
# Check the changes
str(ncha_2023_uca)
```
```{r logistic regression}
# Fit logistic regression model 
model <- glm(UsedCondomAnal30Days ~ ., data = ncha_2023_uca, family = "binomial")
summary(model)
```
```{r calculate a psuedo r-squared}
ll.null<-model$null.deviance/-2
ll.proposed<-model$deviance/-2
(ll.null-ll.proposed)/ll.null
```
```{r check for multicollinearity}
install.packages('car')
library(car)
vif(model)
```
## LastOralSex
```{r select columns for logistic regression}
# Use select() from dplyr to subset columns
ncha_2023_o<-ncha_2023 %>% dplyr::select(all_of(c('LastOralSex',"Flourishing","Resilience","PsychDistressScale","LonelinessScale",
                                          "Selfharm",
                                          "SuicideRiskScale",
                                          "SafetyDayCampus",                           "SafetyNightCampus","USDAFI","BAC","GPA","ALCOHOLRISK", "COCAINERISK","TOBACCORISK","CANNABISRISK","RXSTIMULANTRISK")))
# Drop rows with NA if needed or impute missing values
ncha_2023_o <- na.omit(ncha_2023_o)
library(tidyr)
#ncha_2023_paguide<-ncha_2023_paguide %>% filter(GPA!="N/A")
# Check the changes
#str(ncha_2023_fs)
```
```{r convert ordinal variables to factors}
#SafetyNightCampus
ncha_2023_o$SafetyNightCampus <- factor(ncha_2023_o$SafetyNightCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#SafetyDayCampus
ncha_2023_o$SafetyDayCampus <- factor(ncha_2023_o$SafetyDayCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#Selfharm
ncha_2023_o$Selfharm <- factor(ncha_2023_o$Selfharm, ordered = TRUE, levels = c("Never","Once or twice","Monthly","Weekly","Daily or almost daily"))
#GPA
ncha_2023_o$GPA <- factor(ncha_2023_o$GPA, ordered = TRUE, levels = c("A+",'A','A-',"B+",'B','B-',"C+",'C','C-',"D+",'D','D-','F'))
```
```{r change dependent variable to be binary message=FALSE, warning=FALSE, include=TRUE}
# Make variable binary
ncha_2023_uco$UsedCondomOral30Days <- ifelse(ncha_2023_o$LastOralSex == "Never", 0,                       ifelse(ncha_2023_o$LastOralSex == "Within the last 2 weeks", 1,
        ifelse(ncha_2023_o$LastOralSex == "More than 2 weeks ago, but within the last 30 days",1,
        ifelse(ncha_2023_o$LastOralSex == "More than 30 days ago but within the last 3 months",0,
      ifelse(ncha_2023_o$LastOralSex == "More than 3 months ago but within the last 12 months",0,
        ifelse(ncha_2023_o$LastOralSex == "More than 12 months ago",0,NA))))))
# Convert to factor with levels 0 and 1
ncha_2023_o$LastOralSex <- as.factor(ncha_2023_o$LastOralSex)
# Check the changes
str(ncha_2023_o)
```
```{r logistic regression}
# Fit logistic regression model 
model <- glm(LastOralSex ~ ., data = ncha_2023_o, family = "binomial")
summary(model)
```
```{r calculate a psuedo r-squared}
ll.null<-model$null.deviance/-2
ll.proposed<-model$deviance/-2
(ll.null-ll.proposed)/ll.null
```
```{r check for multicollinearity}
install.packages('car')
library(car)
vif(model)
```
## LastVaginalSex

## LastAnalSex

## SexPartners
```{r select columns for linear regression message=FALSE, warning=FALSE, include=TRUE}
# Use select() from dplyr to subset columns
ncha_2023_sexp<-ncha_2023 %>% dplyr::select(c('SexPartners',"Flourishing","Resilience",
                                          "PsychDistressScale",
                                          "LonelinessScale",
                                          "Selfharm",
                                          "SuicideRiskScale",
                                          "SafetyDayCampus",                           "SafetyNightCampus","USDAFI","BAC","GPA","ALCOHOLRISK", "COCAINERISK","TOBACCORISK","CANNABISRISK","RXSTIMULANTRISK"))
# Drop rows with NA if needed or impute missing values
ncha_2023_sexp <- na.omit(ncha_2023_sexp)
#str(ncha_2023_sexp)
```
```{r convert ordinal variables to factors}
#SafetyNightCampus
ncha_2023_sexp$SafetyNightCampus <- factor(ncha_2023_sexp$SafetyNightCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#SafetyDayCampus
ncha_2023_sexp$SafetyDayCampus <- factor(ncha_2023_sexp$SafetyDayCampus, ordered = TRUE, levels = c("Not safe at all", "Somewhat unsafe", "Somewhat safe",  "Very safe"))
#Selfharm
ncha_2023_sexp$Selfharm <- factor(ncha_2023_sexp$Selfharm, ordered = TRUE, levels = c("Never","Once or twice","Monthly","Weekly","Daily or almost daily"))
#GPA
ncha_2023_sexp$GPA <- factor(ncha_2023_sexp$GPA, ordered = TRUE, levels = c("A+",'A','A-',"B+",'B','B-',"C+",'C','C-',"D+",'D','D-','F'))
# Drop rows with NA if needed or impute missing values
ncha_2023_sexp <- na.omit(ncha_2023_sexp)
#Check changes
#str(ncha_2023_modPA)
```
```{r stepwise linear regression}
# Load the necessary libraries
library(MASS)
library(tidyverse)

# Perform stepwise linear regression
stepwise_model <- stepAIC(lm(SexPartners ~ ., data = ncha_2023_sexp))

# Print the summary of the selected model
summary(stepwise_model)
```
```{r linear regression}
model <- lm(SexPartners ~ ., data = ncha_2023_sexp)

summary(model)
```
```{r check for multicollinearity}
install.packages('car')
library(car)
vif(model)
```
```{r check homoscedasticity}
par(mfrow=c(2,2))
plot(model)
par(mfrow=c(1,1))
```
# SexuallyTouchedNoConsent12Months



